{
  "swagger": "2.0",
  "x-db-models-var-name": "edge_models",
  "produces": [
    "application/json"
  ],
  "host": "localhost:3000",
  "basePath": "/edge",
  "info": {
    "title": "Apigee Nucleus API",
    "description": "Maps components of Apigee Customer Environments to an API",
    "contact": {
      "name": "Diego Zuluaga",
      "url": "https://nucleus-api-test.apigee.com",
      "email": "dzuluaga@apigee.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "paths": {
    "/orgs": {
      "get": {
        "x-swagger-router-controller": "GenericRoute",
        "operationId": "getResource",
        "x-data-model": {
          "model": "Org",
          "cardinality": "findAll",
          "whereAttributes": []
        },
        "tags": [
          "/orgs"
        ],
        "description": "A collection of Apigee Organizations. An organization is the base container for all objects in an API provider's account on Apigee Edge.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Header Param Description. Obtain a valid access token here. https://apigeesc.atlassian.net/wiki/display/NUCLEUS/API+Security",
            "required": true,
            "type": "string",
            "default": "Bearer ya29.aALvVMURujKEcsaMJMht7pdUVsJ3CAEh9uzSbyyjI6QncPZUBUbZOSns0wDHIK_HTcTeojc"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Number of items to be returned. Default 100 and Max 100.",
            "required": false,
            "type": "number",
            "default": 10
          },
          {
            "in": "query",
            "name": "where",
            "description": "Filter items by more specific criteria. Check <a href='http://docs.sequelizejs.com/en/latest/docs/querying/'>Sequelize.js Querying</a> syntax along with describe parameter in Base64 encoding. Return all orgs containing the word 'net' in it would be represented as '{\"org_name\": {\"$like\":\"%net%\"}}' and in base64 as %7B%22org_name%22%3A%20%7B%22%24like%22%3A%22%25net%25%22%7D%7D.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "stacktrace",
            "description": "Useful for development purposes. Returns more information about the error.",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Include only attributes from this list. See describe parameter to retrieve a list of valid attributes. e.g. [\"org_name\",\"account_id\",\"paid\"]",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "include",
            "description": "Include subresources. e.g. [{\"name\": \"APIS\"}]",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Used for paginating records of a collection.",
            "required": false,
            "type": "integer",
            "default": 100
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request.",
            "schema": {
              "type": "object",
              "properties": {
                "entities": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "links": {
                        "type": "array",
                        "items": [
                          {
                            "type": "object",
                            "properties": {
                              "rel": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "href": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "rel",
                              "href"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "rel": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "href": {
                                "type": "string"
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "rel": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "href": {
                                "type": "string"
                              }
                            }
                          }
                        ]
                      },
                      "id": {
                        "type": "string"
                      },
                      "org_name": {
                        "type": "string"
                      },
                      "account_id": {
                        "type": "string"
                      },
                      "account_name": {
                        "type": "string"
                      },
                      "org_type": {
                        "type": "string"
                      },
                      "paid": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "links",
                      "id",
                      "org_name",
                      "account_id",
                      "account_name",
                      "org_type",
                      "paid"
                    ]
                  }
                }
              },
              "required": [
                "entities"
              ]
            }
          }
        }
      }
    },
    "/orgs/{org_name}": {
      "get": {
        "x-swagger-router-controller": "GenericRoute",
        "operationId": "getResource",
        "x-data-model": {
          "model": "Org",
          "cardinality": "findOne",
          "whereAttributes": [
            {
              "attributeName": "id",
              "paramName": "org_name"
            }
          ]
        },
        "tags": [
          "/orgs"
        ],
        "description": "A single entity of an Apigee Organization.",
        "parameters": [
          {
            "in": "path",
            "name": "org_name",
            "required": true,
            "description": "The org id.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Header Param Description. Obtain a valid access token here. https://apigeesc.atlassian.net/wiki/display/NUCLEUS/API+Security",
            "required": true,
            "type": "string",
            "default": "Bearer ya29.aALvVMURujKEcsaMJMht7pdUVsJ3CAEh9uzSbyyjI6QncPZUBUbZOSns0wDHIK_HTcTeojc"
          },
          {
            "in": "query",
            "name": "where",
            "description": "Filter items by more specific criteria. Check <a href='http://docs.sequelizejs.com/en/latest/docs/querying/'>Sequelize.js Querying</a> syntax along with describe parameter in Base64 encoding. Return all orgs containing the word 'net' in it would be represented as '{\"org_name\": {\"$like\":\"%net%\"}}' and in base64 as %7B%22org_name%22%3A%20%7B%22%24like%22%3A%22%25net%25%22%7D%7D.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "stacktrace",
            "description": "Useful for development purposes. Returns more information about the error.",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Include only attributes from this list. See describe parameter to retrieve a list of valid attributes. e.g. [\"org_name\",\"account_id\",\"paid\"]",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "include",
            "description": "Include subresources. e.g. [{\"name\": \"APIS\"}]",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Used for paginating records of a collection.",
            "required": false,
            "type": "integer",
            "default": 100
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request.",
            "schema": {
              "type": "object",
              "properties": {
                "200~orgs~entity.json": {
                  "type": "string"
                }
              },
              "required": [
                "TODO"
              ]
            }
          }
        }
      }
    },
    "/orgs/{org_name}/apis": {
      "get": {
        "x-swagger-router-controller": "GenericRoute",
        "operationId": "getResource",
        "x-data-model": {
          "model": "OrgApi",
          "cardinality": "findAll",
          "whereAttributes": [
            {
              "attributeName": "org_name",
              "paramName": "org_name"
            }
          ]
        },
        "tags": [
          "/apis"
        ],
        "description": "A collection of Apigee APIs. TODO API Proxy definition.",
        "parameters": [
          {
            "in": "path",
            "name": "org_name",
            "required": true,
            "description": "The org name.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Header Param Description. Obtain a valid access token here. https://apigeesc.atlassian.net/wiki/display/NUCLEUS/API+Security",
            "required": true,
            "type": "string",
            "default": "Bearer ya29.aALvVMURujKEcsaMJMht7pdUVsJ3CAEh9uzSbyyjI6QncPZUBUbZOSns0wDHIK_HTcTeojc"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Number of items to be returned. Default 100 and Max 100.",
            "required": false,
            "type": "number",
            "default": 10
          },
          {
            "in": "query",
            "name": "where",
            "description": "Filter items by more specific criteria. Check <a href='http://docs.sequelizejs.com/en/latest/docs/querying/'>Sequelize.js Querying</a> syntax along with describe parameter in Base64 encoding. Return all orgs containing the word 'net' in it would be represented as '{\"org_name\": {\"$like\":\"%net%\"}}' and in base64 as %7B%22org_name%22%3A%20%7B%22%24like%22%3A%22%25net%25%22%7D%7D.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "stacktrace",
            "description": "Useful for development purposes. Returns more information about the error.",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Include only attributes from this list. See describe parameter to retrieve a list of valid attributes. e.g. [\"org_name\",\"account_id\",\"paid\"]",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "include",
            "description": "Include subresources. e.g. [{\"name\": \"APIS\"}]",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Used for paginating records of a collection.",
            "required": false,
            "type": "integer",
            "default": 100
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request.",
            "schema": {
              "type": "object",
              "properties": {
                "TODO~200~apis~collection.json": {
                  "type": "string"
                }
              },
              "required": [
                "TODO"
              ]
            }
          }
        }
      }
    },
    "/orgs/{org_name}/apis/{api_name}": {
      "get": {
        "x-swagger-router-controller": "GenericRoute",
        "operationId": "getResource",
        "x-data-model": {
          "model": "OrgApi",
          "cardinality": "findOne",
          "whereAttributes": [
            {
              "attributeName": "org_name",
              "paramName": "org_name"
            },
            {
              "attributeName": "api_name",
              "paramName": "api_name"
            }
          ]
        },
        "tags": [
          "/apis"
        ],
        "description": "A single entity of an API Proxy.",
        "parameters": [
          {
            "in": "path",
            "name": "org_name",
            "required": true,
            "description": "The org name.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "api_name",
            "required": true,
            "description": "The api name.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Header Param Description. Obtain a valid access token here. https://apigeesc.atlassian.net/wiki/display/NUCLEUS/API+Security",
            "required": true,
            "type": "string",
            "default": "Bearer ya29.aALvVMURujKEcsaMJMht7pdUVsJ3CAEh9uzSbyyjI6QncPZUBUbZOSns0wDHIK_HTcTeojc"
          },
          {
            "in": "query",
            "name": "where",
            "description": "Filter items by more specific criteria. Check <a href='http://docs.sequelizejs.com/en/latest/docs/querying/'>Sequelize.js Querying</a> syntax along with describe parameter in Base64 encoding. Return all orgs containing the word 'net' in it would be represented as '{\"org_name\": {\"$like\":\"%net%\"}}' and in base64 as %7B%22org_name%22%3A%20%7B%22%24like%22%3A%22%25net%25%22%7D%7D.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "stacktrace",
            "description": "Useful for development purposes. Returns more information about the error.",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Include only attributes from this list. See describe parameter to retrieve a list of valid attributes. e.g. [\"org_name\",\"account_id\",\"paid\"]",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "include",
            "description": "Include subresources. e.g. [{\"name\": \"APIS\"}]",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Used for paginating records of a collection.",
            "required": false,
            "type": "integer",
            "default": 100
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request.",
            "schema": {
              "type": "object",
              "properties": {
                "TODO 200~apis~entity.json": {
                  "type": "string"
                }
              },
              "required": [
                "TODO"
              ]
            }
          }
        }
      }
    },
    "/orgs/{org_name}/apis/{api_name}/revisions/{revision_id}/revisionversions": {
      "get": {
        "x-swagger-router-controller": "GenericRoute",
        "operationId": "getResource",
        "x-data-model": {
          "model": "OrgApiRevisionVersion",
          "cardinality": "findAll",
          "whereAttributes": [
            {
              "attributeName": "org_name",
              "paramName": "org_name"
            },
            {
              "attributeName": "api_name",
              "paramName": "api_name"
            },
            {
              "attributeName": "revision",
              "paramName": "revision_id"
            }
          ]
        },
        "tags": [
          "/revisionversions"
        ],
        "description": "TODO A collection of Apigee Organizations. An organization is the base container for all objects in an API provider's account on Apigee Edge.",
        "parameters": [
          {
            "in": "path",
            "name": "org_name",
            "required": true,
            "description": "Org Name.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "api_name",
            "required": true,
            "description": "API Name.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "revision_id",
            "required": true,
            "description": "API Revision.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Header Param Description. Obtain a valid access token here. https://apigeesc.atlassian.net/wiki/display/NUCLEUS/API+Security",
            "required": true,
            "type": "string",
            "default": "Bearer ya29.aALvVMURujKEcsaMJMht7pdUVsJ3CAEh9uzSbyyjI6QncPZUBUbZOSns0wDHIK_HTcTeojc"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Number of items to be returned. Default 100 and Max 100.",
            "required": false,
            "type": "number",
            "default": 10
          },
          {
            "in": "query",
            "name": "where",
            "description": "Filter items by more specific criteria. Check <a href='http://docs.sequelizejs.com/en/latest/docs/querying/'>Sequelize.js Querying</a> syntax along with describe parameter in Base64 encoding. Return all orgs containing the word 'net' in it would be represented as '{\"org_name\": {\"$like\":\"%net%\"}}' and in base64 as %7B%22org_name%22%3A%20%7B%22%24like%22%3A%22%25net%25%22%7D%7D.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "stacktrace",
            "description": "Useful for development purposes. Returns more information about the error.",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Include only attributes from this list. See describe parameter to retrieve a list of valid attributes. e.g. [\"org_name\",\"account_id\",\"paid\"]",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "include",
            "description": "Include subresources. e.g. [{\"name\": \"APIS\"}]",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Used for paginating records of a collection.",
            "required": false,
            "type": "integer",
            "default": 100
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request.",
            "schema": {
              "type": "object",
              "properties": {
                "TODO~200~revisionversions~collection.json": {
                  "type": "string"
                }
              },
              "required": [
                "TODO"
              ]
            }
          }
        }
      }
    },
    "/orgs/{org_name}/apis/{api_name}/revisions/{revision_id}/revisionversions/{version_id}": {
      "get": {
        "x-swagger-router-controller": "GenericRoute",
        "operationId": "getResource",
        "x-data-model": {
          "model": "OrgApiRevisionVersion",
          "cardinality": "findOne",
          "whereAttributes": [
            {
              "attributeName": "org_name",
              "paramName": "org_name"
            },
            {
              "attributeName": "api_name",
              "paramName": "api_name"
            },
            {
              "attributeName": "revision",
              "paramName": "revision_id"
            },
            {
              "attributeName": "version",
              "paramName": "version_id"
            }
          ]
        },
        "tags": [
          "/revisionversions"
        ],
        "description": "TODO A single entity of an Apigee Organization.",
        "parameters": [
          {
            "in": "path",
            "name": "org_name",
            "required": true,
            "description": "Org Name.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "api_name",
            "required": true,
            "description": "API Name.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "revision_id",
            "required": true,
            "description": "API Revision.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "version_id",
            "required": true,
            "description": "API version.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Header Param Description. Obtain a valid access token here. https://apigeesc.atlassian.net/wiki/display/NUCLEUS/API+Security",
            "required": true,
            "type": "string",
            "default": "Bearer ya29.aALvVMURujKEcsaMJMht7pdUVsJ3CAEh9uzSbyyjI6QncPZUBUbZOSns0wDHIK_HTcTeojc"
          },
          {
            "in": "query",
            "name": "where",
            "description": "Filter items by more specific criteria. Check <a href='http://docs.sequelizejs.com/en/latest/docs/querying/'>Sequelize.js Querying</a> syntax along with describe parameter in Base64 encoding. Return all orgs containing the word 'net' in it would be represented as '{\"org_name\": {\"$like\":\"%net%\"}}' and in base64 as %7B%22org_name%22%3A%20%7B%22%24like%22%3A%22%25net%25%22%7D%7D.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "stacktrace",
            "description": "Useful for development purposes. Returns more information about the error.",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Include only attributes from this list. See describe parameter to retrieve a list of valid attributes. e.g. [\"org_name\",\"account_id\",\"paid\"]",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "include",
            "description": "Include subresources. e.g. [{\"name\": \"APIS\"}]",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Used for paginating records of a collection.",
            "required": false,
            "type": "integer",
            "default": 100
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request.",
            "schema": {
              "type": "object",
              "properties": {
                "TODO 200~revisionversions~entity.json": {
                  "type": "string"
                }
              },
              "required": [
                "TODO"
              ]
            }
          }
        }
      }
    },
    "/orgs/{org_name}/apis/{api_name}/revisions/{revision_id}/revisionversions/{version_id}/policies": {
      "get": {
        "x-swagger-router-controller": "GenericRoute",
        "operationId": "getResource",
        "x-data-model": {
          "model": "OrgApiRevisionVersionPolicy",
          "cardinality": "findAll",
          "whereAttributes": [
            {
              "attributeName": "org_name",
              "paramName": "org_name"
            },
            {
              "attributeName": "api_name",
              "paramName": "api_name"
            },
            {
              "attributeName": "revision",
              "paramName": "revision_id"
            },
            {
              "attributeName": "version",
              "paramName": "version_id"
            }
          ]
        },
        "tags": [
          "/policies"
        ],
        "description": "TODO Policies.",
        "parameters": [
          {
            "in": "path",
            "name": "org_name",
            "required": true,
            "description": "Org name.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "api_name",
            "required": true,
            "description": "API name.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "revision_id",
            "required": true,
            "description": "Revision.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "version_id",
            "required": true,
            "description": "Version.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Header Param Description. Obtain a valid access token here. https://apigeesc.atlassian.net/wiki/display/NUCLEUS/API+Security",
            "required": true,
            "type": "string",
            "default": "Bearer ya29.aALvVMURujKEcsaMJMht7pdUVsJ3CAEh9uzSbyyjI6QncPZUBUbZOSns0wDHIK_HTcTeojc"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Number of items to be returned. Default 100 and Max 100.",
            "required": false,
            "type": "number",
            "default": 10
          },
          {
            "in": "query",
            "name": "where",
            "description": "Filter items by more specific criteria. Check <a href='http://docs.sequelizejs.com/en/latest/docs/querying/'>Sequelize.js Querying</a> syntax along with describe parameter in Base64 encoding. Return all orgs containing the word 'net' in it would be represented as '{\"org_name\": {\"$like\":\"%net%\"}}' and in base64 as %7B%22org_name%22%3A%20%7B%22%24like%22%3A%22%25net%25%22%7D%7D.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "stacktrace",
            "description": "Useful for development purposes. Returns more information about the error.",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Include only attributes from this list. See describe parameter to retrieve a list of valid attributes. e.g. [\"org_name\",\"account_id\",\"paid\"]",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "include",
            "description": "Include subresources. e.g. [{\"name\": \"APIS\"}]",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Used for paginating records of a collection.",
            "required": false,
            "type": "integer",
            "default": 100
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request.",
            "schema": {
              "type": "object",
              "properties": {
                "TODO~200~policies~collection.json": {
                  "type": "string"
                }
              },
              "required": [
                "TODO"
              ]
            }
          }
        }
      }
    },
    "/orgs/{org_name}/apis/{api_name}/revisions/{revision_id}/revisionversions/{version_id}/policies/{policy_name}": {
      "get": {
        "x-swagger-router-controller": "GenericRoute",
        "operationId": "getResource",
        "x-data-model": {
          "model": "OrgApiRevisionVersionPolicy",
          "cardinality": "findOne",
          "whereAttributes": [
            {
              "attributeName": "org_name",
              "paramName": "org_name"
            },
            {
              "attributeName": "api_name",
              "paramName": "api_name"
            },
            {
              "attributeName": "revision",
              "paramName": "revision_id"
            },
            {
              "attributeName": "version",
              "paramName": "version_id"
            },
            {
              "attributeName": "policy",
              "paramName": "policy_name"
            }
          ]
        },
        "tags": [
          "/policies"
        ],
        "description": "TODO A single entity of an Apigee Organization.",
        "parameters": [
          {
            "in": "path",
            "name": "org_name",
            "required": true,
            "description": "Org name.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "api_name",
            "required": true,
            "description": "API name.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "revision_id",
            "required": true,
            "description": "Revision.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "version_id",
            "required": true,
            "description": "Version.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "policy_name",
            "required": true,
            "description": "Policy name.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Header Param Description. Obtain a valid access token here. https://apigeesc.atlassian.net/wiki/display/NUCLEUS/API+Security",
            "required": true,
            "type": "string",
            "default": "Bearer ya29.aALvVMURujKEcsaMJMht7pdUVsJ3CAEh9uzSbyyjI6QncPZUBUbZOSns0wDHIK_HTcTeojc"
          },
          {
            "in": "query",
            "name": "where",
            "description": "Filter items by more specific criteria. Check <a href='http://docs.sequelizejs.com/en/latest/docs/querying/'>Sequelize.js Querying</a> syntax along with describe parameter in Base64 encoding. Return all orgs containing the word 'net' in it would be represented as '{\"org_name\": {\"$like\":\"%net%\"}}' and in base64 as %7B%22org_name%22%3A%20%7B%22%24like%22%3A%22%25net%25%22%7D%7D.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "stacktrace",
            "description": "Useful for development purposes. Returns more information about the error.",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Include only attributes from this list. See describe parameter to retrieve a list of valid attributes. e.g. [\"org_name\",\"account_id\",\"paid\"]",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "include",
            "description": "Include subresources. e.g. [{\"name\": \"APIS\"}]",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Used for paginating records of a collection.",
            "required": false,
            "type": "integer",
            "default": 100
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request.",
            "schema": {
              "type": "object",
              "properties": {
                "TODO 200~policies~entity.json": {
                  "type": "string"
                }
              },
              "required": [
                "TODO"
              ]
            }
          }
        }
      }
    },
    "/orgs/{org_name}/apis/{api_name}/revisions/{revision}/revisionversions/{version}/proxies": {
      "get": {
        "x-swagger-router-controller": "GenericRoute",
        "operationId": "getResource",
        "x-data-model": {
          "model": "OrgApiRevisionVersionProxy",
          "cardinality": "findAll",
          "whereAttributes": [
            {
              "attributeName": "org_name",
              "paramName": "org_name"
            },
            {
              "attributeName": "api_name",
              "paramName": "api_name"
            },
            {
              "attributeName": "revision",
              "paramName": "revision"
            },
            {
              "attributeName": "version",
              "paramName": "version"
            }
          ]
        },
        "tags": [
          "/proxies"
        ],
        "description": "TODO A collection of Apigee Organizations. An organization is the base container for all objects in an API provider's account on Apigee Edge.",
        "parameters": [
          {
            "in": "path",
            "name": "org_name",
            "required": true,
            "description": "Org name.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "api_name",
            "required": true,
            "description": "API name.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "revision",
            "required": true,
            "description": "Revision.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "required": true,
            "description": "Version.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Header Param Description. Obtain a valid access token here. https://apigeesc.atlassian.net/wiki/display/NUCLEUS/API+Security",
            "required": true,
            "type": "string",
            "default": "Bearer ya29.aALvVMURujKEcsaMJMht7pdUVsJ3CAEh9uzSbyyjI6QncPZUBUbZOSns0wDHIK_HTcTeojc"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Number of items to be returned. Default 100 and Max 100.",
            "required": false,
            "type": "number",
            "default": 10
          },
          {
            "in": "query",
            "name": "where",
            "description": "Filter items by more specific criteria. Check <a href='http://docs.sequelizejs.com/en/latest/docs/querying/'>Sequelize.js Querying</a> syntax along with describe parameter in Base64 encoding. Return all orgs containing the word 'net' in it would be represented as '{\"org_name\": {\"$like\":\"%net%\"}}' and in base64 as %7B%22org_name%22%3A%20%7B%22%24like%22%3A%22%25net%25%22%7D%7D.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "stacktrace",
            "description": "Useful for development purposes. Returns more information about the error.",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Include only attributes from this list. See describe parameter to retrieve a list of valid attributes. e.g. [\"org_name\",\"account_id\",\"paid\"]",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "include",
            "description": "Include subresources. e.g. [{\"name\": \"APIS\"}]",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Used for paginating records of a collection.",
            "required": false,
            "type": "integer",
            "default": 100
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request.",
            "schema": {
              "type": "object",
              "properties": {
                "TODO~200~proxies~collection.json": {
                  "type": "string"
                }
              },
              "required": [
                "TODO"
              ]
            }
          }
        }
      }
    },
    "/orgs/{org_name}/apis/{api_name}/revisions/{revision}/revisionversions/{version}/proxies/{proxy}": {
      "get": {
        "x-swagger-router-controller": "GenericRoute",
        "operationId": "getResource",
        "x-data-model": {
          "model": "OrgApiRevisionVersionProxy",
          "cardinality": "findOne",
          "whereAttributes": [
            {
              "attributeName": "org_name",
              "paramName": "org_name"
            },
            {
              "attributeName": "api_name",
              "paramName": "api_name"
            },
            {
              "attributeName": "revision",
              "paramName": "revision"
            },
            {
              "attributeName": "version",
              "paramName": "version"
            },
            {
              "attributeName": "proxy",
              "paramName": "proxy"
            }
          ]
        },
        "tags": [
          "/proxies"
        ],
        "description": "TODO A single entity of an Apigee Organization.",
        "parameters": [
          {
            "in": "path",
            "name": "org_name",
            "required": true,
            "description": "Org name.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "api_name",
            "required": true,
            "description": "API name.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "revision",
            "required": true,
            "description": "Revision.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "required": true,
            "description": "Version.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "proxy",
            "required": true,
            "description": "Proxy.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Header Param Description. Obtain a valid access token here. https://apigeesc.atlassian.net/wiki/display/NUCLEUS/API+Security",
            "required": true,
            "type": "string",
            "default": "Bearer ya29.aALvVMURujKEcsaMJMht7pdUVsJ3CAEh9uzSbyyjI6QncPZUBUbZOSns0wDHIK_HTcTeojc"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Number of items to be returned. Default 100 and Max 100.",
            "required": false,
            "type": "number",
            "default": 10
          },
          {
            "in": "query",
            "name": "where",
            "description": "Filter items by more specific criteria. Check <a href='http://docs.sequelizejs.com/en/latest/docs/querying/'>Sequelize.js Querying</a> syntax along with describe parameter in Base64 encoding. Return all orgs containing the word 'net' in it would be represented as '{\"org_name\": {\"$like\":\"%net%\"}}' and in base64 as %7B%22org_name%22%3A%20%7B%22%24like%22%3A%22%25net%25%22%7D%7D.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "stacktrace",
            "description": "Useful for development purposes. Returns more information about the error.",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Include only attributes from this list. See describe parameter to retrieve a list of valid attributes. e.g. [\"org_name\",\"account_id\",\"paid\"]",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "include",
            "description": "Include subresources. e.g. [{\"name\": \"APIS\"}]",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Used for paginating records of a collection.",
            "required": false,
            "type": "integer",
            "default": 100
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request.",
            "schema": {
              "type": "object",
              "properties": {
                "TODO~200~proxies~collection.json": {
                  "type": "string"
                }
              },
              "required": [
                "TODO"
              ]
            }
          }
        }
      }
    },
    "/orgs/{org_name}/apis/{api_name}/revisions/{revision}/revisionversions/{version}/resources": {
      "get": {
        "x-swagger-router-controller": "GenericRoute",
        "operationId": "getResource",
        "x-data-model": {
          "model": "OrgApiRevisionVersionResourceFile",
          "cardinality": "findAll",
          "whereAttributes": [
            {
              "attributeName": "org_name",
              "paramName": "org_name"
            },
            {
              "attributeName": "api_name",
              "paramName": "api_name"
            },
            {
              "attributeName": "revision",
              "paramName": "revision"
            },
            {
              "attributeName": "version",
              "paramName": "version"
            }
          ]
        },
        "tags": [
          "/resources"
        ],
        "description": "TODO A collection of Apigee Organizations. An organization is the base container for all objects in an API provider's account on Apigee Edge.",
        "parameters": [
          {
            "in": "path",
            "name": "org_name",
            "required": true,
            "description": "Org name.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "api_name",
            "required": true,
            "description": "API name.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "revision",
            "required": true,
            "description": "Revision.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "required": true,
            "description": "Version.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request.",
            "schema": {
              "type": "object",
              "properties": {
                "TODO~200~resources~collection.json": {
                  "type": "string"
                }
              },
              "required": [
                "TODO"
              ]
            }
          }
        }
      }
    },
    "/orgs/{org_name}/apis/{api_name}/revisions/{revision}/revisionversions/{version}/resources/{resourcefile}": {
      "get": {
        "x-swagger-router-controller": "GenericRoute",
        "operationId": "getResource",
        "x-data-model": {
          "model": "OrgApiRevisionVersionResourceFile",
          "cardinality": "findOne",
          "whereAttributes": [
            {
              "attributeName": "org_name",
              "paramName": "org_name"
            },
            {
              "attributeName": "api_name",
              "paramName": "api_name"
            },
            {
              "attributeName": "revision",
              "paramName": "revision"
            },
            {
              "attributeName": "version",
              "paramName": "version"
            },
            {
              "attributeName": "resourcefile",
              "paramName": "resourcefile"
            }
          ]
        },
        "tags": [
          "/resources"
        ],
        "description": "TODO A single entity of an Apigee Organization.",
        "parameters": [
          {
            "in": "path",
            "name": "org_name",
            "required": true,
            "description": "Org name.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "api_name",
            "required": true,
            "description": "API name.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "revision",
            "required": true,
            "description": "Revision.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "required": true,
            "description": "Version.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourcefile",
            "required": true,
            "description": "Resourcefile.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request.",
            "schema": {
              "type": "object",
              "properties": {
                "TODO 200~resources~entity.json": {
                  "type": "string"
                }
              },
              "required": [
                "TODO"
              ]
            }
          }
        }
      }
    },
    "/apis": {
      "get": {
        "x-swagger-router-controller": "GenericRoute",
        "operationId": "getResource",
        "x-data-model": {
          "model": "OrgApi",
          "cardinality": "findAll",
          "whereAttributes": []
        },
        "tags": [
          "/apis"
        ],
        "description": "A collection of Apigee APIs. TODO API Proxy definition.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Header Param Description. Obtain a valid access token here. https://apigeesc.atlassian.net/wiki/display/NUCLEUS/API+Security",
            "required": true,
            "type": "string",
            "default": "Bearer ya29.aALvVMURujKEcsaMJMht7pdUVsJ3CAEh9uzSbyyjI6QncPZUBUbZOSns0wDHIK_HTcTeojc"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Number of items to be returned. Default 100 and Max 100.",
            "required": false,
            "type": "number",
            "default": 10
          },
          {
            "in": "query",
            "name": "where",
            "description": "Filter items by more specific criteria. Check <a href='http://docs.sequelizejs.com/en/latest/docs/querying/'>Sequelize.js Querying</a> syntax along with describe parameter in Base64 encoding. Return all orgs containing the word 'net' in it would be represented as '{\"org_name\": {\"$like\":\"%net%\"}}' and in base64 as %7B%22org_name%22%3A%20%7B%22%24like%22%3A%22%25net%25%22%7D%7D.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "stacktrace",
            "description": "Useful for development purposes. Returns more information about the error.",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Include only attributes from this list. See describe parameter to retrieve a list of valid attributes. e.g. [\"org_name\",\"account_id\",\"paid\"]",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "include",
            "description": "Include subresources. e.g. [{\"name\": \"APIS\"}]",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Used for paginating records of a collection.",
            "required": false,
            "type": "integer",
            "default": 100
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request.",
            "schema": {
              "type": "object",
              "properties": {
                "TODO~200~apis~collection.json": {
                  "type": "string"
                }
              },
              "required": [
                "TODO"
              ]
            }
          }
        }
      }
    },
    "/apis/{org_api_id}": {
      "get": {
        "x-swagger-router-controller": "GenericRoute",
        "operationId": "getResource",
        "x-data-model": {
          "model": "OrgApi",
          "cardinality": "findOne",
          "whereAttributes": [
            {
              "attributeName": "id",
              "paramName": "org_api_id"
            }
          ]
        },
        "tags": [
          "/apis"
        ],
        "description": "A single entity of an API Proxy.",
        "parameters": [
          {
            "in": "path",
            "name": "org_api_id",
            "required": true,
            "description": "TODO",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Header Param Description. Obtain a valid access token here. https://apigeesc.atlassian.net/wiki/display/NUCLEUS/API+Security",
            "required": true,
            "type": "string",
            "default": "Bearer ya29.aALvVMURujKEcsaMJMht7pdUVsJ3CAEh9uzSbyyjI6QncPZUBUbZOSns0wDHIK_HTcTeojc"
          },
          {
            "in": "query",
            "name": "where",
            "description": "Filter items by more specific criteria. Check <a href='http://docs.sequelizejs.com/en/latest/docs/querying/'>Sequelize.js Querying</a> syntax along with describe parameter in Base64 encoding. Return all orgs containing the word 'net' in it would be represented as '{\"org_name\": {\"$like\":\"%net%\"}}' and in base64 as %7B%22org_name%22%3A%20%7B%22%24like%22%3A%22%25net%25%22%7D%7D.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "stacktrace",
            "description": "Useful for development purposes. Returns more information about the error.",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Include only attributes from this list. See describe parameter to retrieve a list of valid attributes. e.g. [\"org_name\",\"account_id\",\"paid\"]",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "include",
            "description": "Include subresources. e.g. [{\"name\": \"APIS\"}]",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Used for paginating records of a collection.",
            "required": false,
            "type": "integer",
            "default": 100
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request.",
            "schema": {
              "type": "object",
              "properties": {
                "TODO 200~apis~entity.json": {
                  "type": "string"
                }
              },
              "required": [
                "TODO"
              ]
            }
          }
        }
      }
    },
    "/revisions": {
      "get": {
        "x-swagger-router-controller": "GenericRoute",
        "operationId": "getResource",
        "x-data-model": {
          "model": "OrgApiRevision",
          "cardinality": "findAll",
          "whereAttributes": []
        },
        "tags": [
          "/revisions"
        ],
        "description": "TODO A collection of API Revisions associated to an API. ",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Header Param Description. Obtain a valid access token here. https://apigeesc.atlassian.net/wiki/display/NUCLEUS/API+Security",
            "required": true,
            "type": "string",
            "default": "Bearer ya29.aALvVMURujKEcsaMJMht7pdUVsJ3CAEh9uzSbyyjI6QncPZUBUbZOSns0wDHIK_HTcTeojc"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Number of items to be returned. Default 100 and Max 100.",
            "required": false,
            "type": "number",
            "default": 10
          },
          {
            "in": "query",
            "name": "where",
            "description": "Filter items by more specific criteria. Check <a href='http://docs.sequelizejs.com/en/latest/docs/querying/'>Sequelize.js Querying</a> syntax along with describe parameter in Base64 encoding. Return all orgs containing the word 'net' in it would be represented as '{\"org_name\": {\"$like\":\"%net%\"}}' and in base64 as %7B%22org_name%22%3A%20%7B%22%24like%22%3A%22%25net%25%22%7D%7D.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "stacktrace",
            "description": "Useful for development purposes. Returns more information about the error.",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Include only attributes from this list. See describe parameter to retrieve a list of valid attributes. e.g. [\"org_name\",\"account_id\",\"paid\"]",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "include",
            "description": "Include subresources. e.g. [{\"name\": \"APIS\"}]",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Used for paginating records of a collection.",
            "required": false,
            "type": "integer",
            "default": 100
          }
        ],
        "responses": {
          "$ref": "./refs/responses.json#/revisions/collection"
        }
      }
    },
    "/revisions/{org_api_revision_id}": {
      "get": {
        "x-swagger-router-controller": "GenericRoute",
        "operationId": "getResource",
        "x-data-model": {
          "model": "OrgApiRevision",
          "cardinality": "findOne",
          "whereAttributes": [
            {
              "attributeName": "id",
              "paramName": "org_api_revision_id"
            }
          ]
        },
        "tags": [
          "/revisions"
        ],
        "description": "TODO A single entity of an API Revision.",
        "parameters": [
          {
            "in": "path",
            "name": "org_api_revision_id",
            "required": true,
            "description": "API Revision id.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Header Param Description. Obtain a valid access token here. https://apigeesc.atlassian.net/wiki/display/NUCLEUS/API+Security",
            "required": true,
            "type": "string",
            "default": "Bearer ya29.aALvVMURujKEcsaMJMht7pdUVsJ3CAEh9uzSbyyjI6QncPZUBUbZOSns0wDHIK_HTcTeojc"
          },
          {
            "in": "query",
            "name": "where",
            "description": "Filter items by more specific criteria. Check <a href='http://docs.sequelizejs.com/en/latest/docs/querying/'>Sequelize.js Querying</a> syntax along with describe parameter in Base64 encoding. Return all orgs containing the word 'net' in it would be represented as '{\"org_name\": {\"$like\":\"%net%\"}}' and in base64 as %7B%22org_name%22%3A%20%7B%22%24like%22%3A%22%25net%25%22%7D%7D.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "stacktrace",
            "description": "Useful for development purposes. Returns more information about the error.",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Include only attributes from this list. See describe parameter to retrieve a list of valid attributes. e.g. [\"org_name\",\"account_id\",\"paid\"]",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "include",
            "description": "Include subresources. e.g. [{\"name\": \"APIS\"}]",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Used for paginating records of a collection.",
            "required": false,
            "type": "integer",
            "default": 100
          }
        ],
        "responses": {
          "$ref": "./refs/responses.json#/revisions/entity"
        }
      }
    },
    "/revisionversions": {
      "get": {
        "x-swagger-router-controller": "GenericRoute",
        "operationId": "getResource",
        "x-data-model": {
          "model": "OrgApiRevisionVersion",
          "cardinality": "findAll",
          "whereAttributes": []
        },
        "tags": [
          "/revisionversions"
        ],
        "description": "TODO A collection of Apigee Organizations. An organization is the base container for all objects in an API provider's account on Apigee Edge.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Header Param Description. Obtain a valid access token here. https://apigeesc.atlassian.net/wiki/display/NUCLEUS/API+Security",
            "required": true,
            "type": "string",
            "default": "Bearer ya29.aALvVMURujKEcsaMJMht7pdUVsJ3CAEh9uzSbyyjI6QncPZUBUbZOSns0wDHIK_HTcTeojc"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Number of items to be returned. Default 100 and Max 100.",
            "required": false,
            "type": "number",
            "default": 10
          },
          {
            "in": "query",
            "name": "where",
            "description": "Filter items by more specific criteria. Check <a href='http://docs.sequelizejs.com/en/latest/docs/querying/'>Sequelize.js Querying</a> syntax along with describe parameter in Base64 encoding. Return all orgs containing the word 'net' in it would be represented as '{\"org_name\": {\"$like\":\"%net%\"}}' and in base64 as %7B%22org_name%22%3A%20%7B%22%24like%22%3A%22%25net%25%22%7D%7D.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "stacktrace",
            "description": "Useful for development purposes. Returns more information about the error.",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Include only attributes from this list. See describe parameter to retrieve a list of valid attributes. e.g. [\"org_name\",\"account_id\",\"paid\"]",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "include",
            "description": "Include subresources. e.g. [{\"name\": \"APIS\"}]",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Used for paginating records of a collection.",
            "required": false,
            "type": "integer",
            "default": 100
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request.",
            "schema": {
              "type": "object",
              "properties": {
                "TODO~200~revisionversions~collection.json": {
                  "type": "string"
                }
              },
              "required": [
                "TODO"
              ]
            }
          }
        }
      }
    },
    "/revisionversions/{api_revision_version_id}": {
      "get": {
        "x-swagger-router-controller": "GenericRoute",
        "operationId": "getResource",
        "x-data-model": {
          "model": "OrgApiRevisionVersion",
          "cardinality": "findOne",
          "whereAttributes": [
            {
              "attributeName": "id",
              "paramName": "api_revision_version_id"
            }
          ]
        },
        "tags": [
          "/revisionversions"
        ],
        "description": "TODO A single entity of an Apigee Organization.",
        "parameters": [
          {
            "in": "path",
            "name": "api_revision_version_id",
            "required": true,
            "description": "API Revision Version id.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Header Param Description. Obtain a valid access token here. https://apigeesc.atlassian.net/wiki/display/NUCLEUS/API+Security",
            "required": true,
            "type": "string",
            "default": "Bearer ya29.aALvVMURujKEcsaMJMht7pdUVsJ3CAEh9uzSbyyjI6QncPZUBUbZOSns0wDHIK_HTcTeojc"
          },
          {
            "in": "query",
            "name": "where",
            "description": "Filter items by more specific criteria. Check <a href='http://docs.sequelizejs.com/en/latest/docs/querying/'>Sequelize.js Querying</a> syntax along with describe parameter in Base64 encoding. Return all orgs containing the word 'net' in it would be represented as '{\"org_name\": {\"$like\":\"%net%\"}}' and in base64 as %7B%22org_name%22%3A%20%7B%22%24like%22%3A%22%25net%25%22%7D%7D.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "stacktrace",
            "description": "Useful for development purposes. Returns more information about the error.",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Include only attributes from this list. See describe parameter to retrieve a list of valid attributes. e.g. [\"org_name\",\"account_id\",\"paid\"]",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "include",
            "description": "Include subresources. e.g. [{\"name\": \"APIS\"}]",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Used for paginating records of a collection.",
            "required": false,
            "type": "integer",
            "default": 100
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request.",
            "schema": {
              "type": "object",
              "properties": {
                "TODO 200~revisionversions~entity.json": {
                  "type": "string"
                }
              },
              "required": [
                "TODO"
              ]
            }
          }
        }
      }
    }
  }
}